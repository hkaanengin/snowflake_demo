
USE ROLE ACCOUNTADMIN;

-- Roles
SET MY_USER = CURRENT_USER();
CREATE OR REPLACE ROLE KEK_ROLE;
GRANT ROLE KEK_ROLE TO ROLE SYSADMIN;
GRANT ROLE KEK_ROLE TO USER IDENTIFIER($MY_USER);

GRANT EXECUTE TASK ON ACCOUNT TO ROLE KEK_ROLE;
GRANT MONITOR EXECUTION ON ACCOUNT TO ROLE KEK_ROLE;
GRANT IMPORTED PRIVILEGES ON DATABASE SNOWFLAKE TO ROLE KEK_ROLE;

-- Db
CREATE OR REPLACE DATABASE KEK_DB;
GRANT OWNERSHIP ON DATABASE KEK_DB TO ROLE KEK_ROLE;

-- Wh
CREATE OR REPLACE WAREHOUSE KEK_WH WAREHOUSE_SIZE = XSMALL, AUTO_SUSPEND = 300, AUTO_RESUME= TRUE;
GRANT OWNERSHIP ON WAREHOUSE KEK_WH TO ROLE KEK_ROLE;



-- Create the database level objects
USE ROLE ACCOUNTADMIN;
USE WAREHOUSE KEK_WH;
USE DATABASE KEK_DB;

-- CREATE OR REPLACE STORAGE INTEGRATION snowflake_kek_role_acc1
-- TYPE = EXTERNAL_STAGE
-- STORAGE_PROVIDER = 'S3'
-- ENABLED = TRUE
-- STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::986569156932:role/snowflake_role'
-- STORAGE_ALLOWED_LOCATIONS = ('s3://char-bucket/');

GRANT USAGE ON INTEGRATION snowflake_kek_role_acc1 TO ROLE KEK_ROLE;

USE ROLE KEK_ROLE;

-- Schemas and Storages
CREATE OR REPLACE SCHEMA EXTERNAL;
CREATE OR REPLACE SCHEMA RAW_USER;
CREATE OR REPLACE SCHEMA RAW_USER_2;
CREATE OR REPLACE SCHEMA RAW_FLIGHT;
CREATE OR REPLACE SCHEMA RAW_POS;
CREATE OR REPLACE SCHEMA RAW_CUSTOMER;
CREATE OR REPLACE SCHEMA ANALYTICS;
CREATE OR REPLACE SCHEMA HARMONIZED;

-- External Frostbyte objects
USE SCHEMA EXTERNAL;
CREATE OR REPLACE FILE FORMAT PARQUET_FORMAT
    TYPE = PARQUET
    COMPRESSION = SNAPPY
;

CREATE OR REPLACE STAGE FROSTBYTE_RAW_STAGE_USERDATA
    STORAGE_INTEGRATION = snowflake_kek_role_acc1
    URL = 's3://char-bucket/'
;
CREATE OR REPLACE STAGE FROSTBYTE_RAW_STAGE
    URL = 's3://sfquickstarts/data-engineering-with-snowpark-python/'
;
-- ANALYTICS objects
USE SCHEMA ANALYTICS;

CREATE OR REPLACE FUNCTION ANALYTICS.FAHRENHEIT_TO_CELSIUS_UDF(TEMP_F NUMBER(35,4))
RETURNS NUMBER(35,4)
AS
$$
   (temp_f - 32) * (5/9)
$$;

CREATE OR REPLACE FUNCTION salary_to_tl(salary int)
RETURNS INT
LANGUAGE PYTHON
RUNTIME_VERSION = '3.10'
HANDLER = 'salary_to_tl'
    AS
$$
def salary_to_tl(salary):
    return salary * 30
$$;






